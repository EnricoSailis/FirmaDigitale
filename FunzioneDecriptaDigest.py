# Decripta un numero intero b ( digest criptato)  usando l'algoritmo RSA
# con chiave pubblica H e modulo n


#Chiave pubblica H
H= 4773486506651844353232832863218408999413317210770963265012053051936325127640156253757815189434676901138443015628416123110279900061048927032500378357101366671820863721143941751998556575740137670473755396681727596354892591001616011778073901181871146600764212792893085018088563339504814813063472329952084153039

# Modulo n di Zn
n= 701064518855611018351478696102506418399825442746726653223259695569509705775468431772016597671558340607176346069752387207300026319363235606235803343592326202997400179617232019898767655393020397478647637150500050978535824202795469084521218646678629269178928306570620187601077271773458876859353270307835027595075038292233528235482015692258319706954736176144228736447145479019798447992154270115981577086151819437202886383848776226342314587052829542561202681322155196513938369788363934202405133469168018152271115890431532142836923770243207039391995003181279950488824074904548090582844789163411833034207527724019908213858019813574716214838351551568686418650274084997640777976729912298861277261397747425777635172396963553598286311289269115577524113338028246799325084673319859124125510550293016147399980140661943934972558897611773600100723236950713154800419871639330290163565729022078814691879197262001467891838174253933635274752948230841496813002422616125866329887302774948331671474309522475458181415662705105517059813429641495185150256124546384599638148221533780634964083425344194795009915658593666194343095352161043369775538059183929274715046394302155444556334070754961373304906265204034240001167623886325280987458856900403236196789147149332993

# Il numero intero da decriptare è il digest criptato in notazione decimale
# e viene assegnato alla base b della potenza b^H in Zn
# Tale potenza è il digest originale in notazione decimale
# che và quindi convertito in notazione esadecimale.
b= 168908280606104078034474204107956390119518604587530733237511051166015126071213094442036675367209687340773409781930794775830853089280554830839934439131287243932121632215288400468870921535924353317616559049206492969008559458961339869042165990644266577427577168570397671480809823009175955679082034222725077634151477624629096166511787889867041963114826537034413793006789967738683996630978557475095829260946375469769919841264244999649367197943982006300000327416868648097932018261314933643731563857189326143163472702931203220191890006642324623610639033693018896451765986908697451112920727892478029800656218719558764261217036846467400739492751181943826917710964016513186945532244365527430754581051076444588376905913495574684280238819015246980794976785332758943843551295109814592901917420637556287927582956712170414808366512107786421298489287604955863052337242239262728371761336807808948959116441352744527253845959643260828841922571458716353180386507939337118957080821673203644387845794440755059174534399545617082826383517274418764808129906846543055735516990892177145191163146065334132703210247626635931293998462523136344337693177527507700142130385030205397999422251581350697997369900841346645083044617941303543110548470716987276093288812275013763

def DecriptaDigest(n,H,b):
    # Calcola la potenza b^K in Zn dove b è il digest trasformato
    # in numero intero, p_key è la chiave privata RSA e 
    # n è il modulo di Zn

    x=b
    y=H
    z=1
    while y>0:
        if y%2==1:
            z=z*x
            z=z%n
            y=y-1
        x=x*x
        x=x%n
        y=y//2
    return hex(z)

digest=DecriptaDigest(n,H,b)
print('Il digest è:')
print(digest)